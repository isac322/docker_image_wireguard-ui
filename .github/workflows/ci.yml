name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  wireguard-ui_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.wireguard-ui_version.outputs.version }}
      gh_tag: ${{ steps.wireguard-ui_version.outputs.gh_tag }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - name: Get wireguard-ui version
        working-directory: versioned
        id: wireguard-ui_version
        run: |
          GH_TAG=$(go list -f '{{ .Version }}' -m 'github.com/ngoduykhanh/wireguard-ui')
          VERSION=$(go list -f '{{ .Version }}' -m 'github.com/ngoduykhanh/wireguard-ui' | sed -E 's/v?(.+)/\1/')
          echo $GH_TAG $VERSION
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=gh_tag::${GH_TAG}"
  docker:
    runs-on: ubuntu-latest
    needs: wireguard-ui_version
    env:
      PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7
      DOCKERHUB_USERNAME: isac322
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v31.0.2
        with:
          files: versioned/go.*
      - uses: actions/checkout@v3
        with:
          repository: ngoduykhanh/wireguard-ui
          ref: ${{ needs.wireguard-ui_version.outputs.gh_tag }}
      - name: patch platform
        run: sed -i -E -e 's/GOOS=\$\{TARGETOS\} GOARCH=\$\{TARGETARCH\}//' -e 's/^ARG\W+(:?TARGETOS|TARGETARCH)=.+$//' Dockerfile
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4.0.1
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/wireguard-ui
          tags: |
            type=semver,pattern={{version}},value=${{ needs.wireguard-ui_version.outputs.version }}
          labels: |
            maintainer=${{ env.DOCKERHUB_USERNAME }}
            org.opencontainers.image.title=wireguard-ui
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          pull: true
          push: ${{ steps.changed-files.outputs.any_changed == 'true' && github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/wireguard-ui:latest
          cache-to: type=inline
      - name: Update repo description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKERHUB_USERNAME }}/wireguard-ui
